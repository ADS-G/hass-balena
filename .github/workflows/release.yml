name: Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Prepare release
    runs-on: ubuntu-latest
    steps:
      - name: 🏗️ Checkout repository
        uses: actions/checkout@v4

      - name: 🏷️ Get version from tag
        id: version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "VERSION_WITHOUT_V=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: 📝 Update version in manifest
        run: |
          VERSION=${{ steps.version.outputs.VERSION_WITHOUT_V }}
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" custom_components/balena_cloud/manifest.json

      - name: 🎯 Validate integration
        run: |
          # Run basic validation
          python -c "
          import json
          with open('custom_components/balena_cloud/manifest.json') as f:
              manifest = json.load(f)
              print(f'Integration: {manifest[\"name\"]} v{manifest[\"version\"]}')
              assert 'balena-sdk' in str(manifest.get('requirements', []))
              print('✅ Manifest validation passed')
          "

      - name: 📦 Create release archive
        run: |
          cd custom_components
          zip -r ../balena_cloud.zip balena_cloud/
          cd ..

      - name: 📤 Upload release archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ steps.version.outputs.VERSION }} balena_cloud.zip --clobber

      - name: 📢 Update release notes
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            // Read current release notes
            const release = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });

            const version = '${{ steps.version.outputs.VERSION_WITHOUT_V }}';

            // Enhanced release notes
            const enhancedNotes = `## 🎉 Balena Cloud Integration v${version}

            ${release.data.body || 'New release of the Balena Cloud Home Assistant integration.'}

            ## 📥 Installation

            ### HACS (Recommended)
            1. Open HACS in your Home Assistant instance
            2. Go to "Integrations"
            3. Click "Explore & Download Repositories"
            4. Search for "Balena Cloud"
            5. Download and restart Home Assistant
            6. Go to Settings → Devices & Services → Add Integration
            7. Search for "Balena Cloud" and follow the setup

            ### Manual Installation
            1. Download \`balena_cloud.zip\` from this release
            2. Extract to \`custom_components/balena_cloud/\` in your Home Assistant config directory
            3. Restart Home Assistant
            4. Add the integration via Settings → Devices & Services

            ## 🔧 Requirements
            - Home Assistant 2023.1.0 or newer
            - Balena Cloud API token
            - Python 3.11+ (handled by Home Assistant)

            ## 📚 Documentation
            - [Installation Guide](https://github.com/eseverson/hass-balena/blob/main/README.md)
            - [Configuration Options](https://github.com/eseverson/hass-balena/blob/main/README.md#configuration)

            ---
            **Full Changelog**: https://github.com/eseverson/hass-balena/compare/v${version}...HEAD
            `;

            // Update the release
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: enhancedNotes
            });
